<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QuickStart NS Referral Information Formatter</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            color: white;
            margin-bottom: 30px;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.1em;
            opacity: 0.95;
        }

        .input-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        }

        .input-section h2 {
            color: #333;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .input-section h2::before {
            content: "üìã";
        }

        textarea {
            width: 100%;
            height: 150px;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 14px;
            font-family: 'Courier New', monospace;
            transition: border-color 0.3s;
            resize: vertical;
        }

        textarea:focus {
            outline: none;
            border-color: #667eea;
        }

        .button-group {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        button {
            padding: 12px 30px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .convert-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            flex: 1;
        }

        .convert-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.4);
        }

        .clear-btn {
            background: #f5f5f5;
            color: #666;
        }

        .clear-btn:hover {
            background: #e0e0e0;
        }

        .print-btn {
            background: #4CAF50;
            color: white;
        }

        .print-btn:hover {
            background: #45a049;
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(76, 175, 80, 0.4);
        }

        .output-section {
            background: white;
            border-radius: 15px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            display: none;
        }

        .output-section.show {
            display: block;
            animation: fadeIn 0.5s;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .document-header {
            text-align: center;
            margin-bottom: 40px;
            padding-bottom: 20px;
            border-bottom: 3px solid #667eea;
        }

        .document-header h1 {
            color: #333;
            font-size: 28px;
            margin-bottom: 10px;
        }

        .document-header .date {
            color: #666;
            font-size: 14px;
            margin: 5px 0;
        }

        .section {
            margin-bottom: 35px;
            page-break-inside: avoid;
        }

        .section-title {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 10px 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 18px;
            font-weight: 600;
        }

        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 15px;
        }

        .info-item {
            padding: 12px;
            background: #f8f9fa;
            border-radius: 8px;
            border-left: 4px solid #667eea;
        }

        .info-item.full-width {
            grid-column: 1 / -1;
        }

        .info-label {
            font-weight: 600;
            color: #555;
            font-size: 12px;
            text-transform: uppercase;
            margin-bottom: 5px;
        }

        .info-value {
            color: #333;
            font-size: 15px;
            word-break: break-word;
            white-space: pre-wrap;
        }

        .info-value.empty {
            color: #999;
            font-style: italic;
        }

        .alert {
            background: #fff3cd;
            border: 1px solid #ffc107;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            display: none;
        }

        .alert.show {
            display: block;
        }

        .instructions {
            background: #e8f4fd;
            border: 1px solid #2196F3;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            color: #1976D2;
        }

        @media print {
            body {
                background: white;
                padding: 0;
            }

            .container {
                max-width: 100%;
            }

            .input-section,
            .header,
            .button-group,
            .alert,
            .instructions {
                display: none !important;
            }

            .output-section {
                box-shadow: none;
                padding: 20px;
            }

            .section-title {
                background: #f0f0f0 !important;
                color: #333 !important;
                -webkit-print-color-adjust: exact;
                print-color-adjust: exact;
            }

            .info-item {
                border-left-color: #666 !important;
                -webkit-print-color-adjust: exact;
                print-color-adjust: exact;
            }

            .document-header {
                border-bottom-color: #666 !important;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>QuickStart NS Referral Information Formatter</h1>
            <p>Convert Excel row data into a formatted PDF document</p>
        </div>

        <div class="input-section">
            <h2>Paste Excel Row Data</h2>
            <div class="instructions">
                <strong>Instructions:</strong>
                <ol style="margin-left: 20px; margin-top: 10px;">
                    <li>Open your Excel file with referral data</li>
                    <li>Select the entire row (click on the row number)</li>
                    <li>Copy the row (Ctrl+C or Cmd+C)</li>
                    <li>Paste it in the box below (Ctrl+V or Cmd+V)</li>
                    <li>Click "Convert to Document"</li>
                </ol>
            </div>
            <textarea id="excelData" placeholder="Paste your Excel row data here..."></textarea>
            
            <div class="button-group">
                <button class="convert-btn" onclick="convertData()">
                    <span>üîÑ</span> Convert to Document
                </button>
                <button class="clear-btn" onclick="clearData()">
                    <span>üóëÔ∏è</span> Clear
                </button>
            </div>
        </div>

        <div id="alert" class="alert">
            <strong>‚ö†Ô∏è Note:</strong> Some critical fields appear to be empty. Please review the formatted document below.
        </div>

        <div id="output" class="output-section">
            <div class="button-group" style="margin-bottom: 30px;">
                <button class="print-btn" onclick="window.print()">
                    <span>üñ®Ô∏è</span> Save as PDF / Print
                </button>
                <button class="clear-btn" onclick="clearData()">
                    <span>‚Üë</span> Start New Conversion
                </button>
            </div>

            <div id="documentContent">
                <!-- Content will be generated here -->
            </div>
        </div>
    </div>

    <script>
        // Updated field mapping based on new Excel structure
        // Column indices match the Excel file exactly
        const fieldMapping = [
            'Id',                                                                    // A (0)
            'Start time',                                                           // B (1)
            'Completion time',                                                      // C (2)
            'Email',                                                                // D (3)
            'Name',                                                                 // E (4) - Always empty, linked to MS Forms
            'Are you the parent/guardian of the child?',                          // F (5)
            'Referral on behalf confirmation',                                     // G (6)
            'Name of person completing the form',                                  // H (7)
            'Email of the person completing the form',                             // I (8)
            'Relationship to child',                                               // J (9)
            'Age of child at referral',                                           // K (10)
            'Consent for CICC sharing',                                           // L (11)
            "Child's first and last name",                                        // M (12)
            "Child's date of birth",                                              // N (13)
            "Child's health card number",                                         // O (14)
            'Child pronouns',                                                      // P (15)
            'Ethnicity',                                                           // Q (16) - Will capture but not display
            'What type of Autism diagnosis does the/your child have?',           // R (17)
            '1st parent/guardian full name',                                      // S (18)
            '1st parent/guardian phone number',                                   // T (19)
            '1st parent/guardian email address',                                  // U (20)
            '2nd parent/guardian full name (Optional)',                           // V (21)
            '2nd parent/guardian phone number',                                   // W (22)
            '2nd parent/guardian email',                                          // X (23)
            'Home address',                                                        // Y (24)
            'Zone location',                                                       // Z (25)
            'Best method of contact',                                             // AA (26)
            'Best time of day to contact you by phone',                           // AB (27)
            'Are you fluent in English?',                                         // AC (28)
            'Language(s) spoken at home other than English',                      // AD (29)
            'Is there any additional information you want to share',              // AE (30)
            'Contact info for referral completion'                                // AF (31)
        ];

        function convertData() {
            const input = document.getElementById('excelData').value.trim();
            
            if (!input) {
                alert('Please paste data from your Excel file first.');
                return;
            }

            // Split by tab (Excel default)
            let values = input.split('\t');
            
            // If no tabs found, try comma
            if (values.length === 1) {
                values = input.split(',');
            }

            // Create data object
            const data = {};
            fieldMapping.forEach((field, index) => {
                data[field] = values[index] || '';
            });

            // Generate formatted document
            generateDocument(data);

            // Show output section
            document.getElementById('output').classList.add('show');

            // Check for empty critical fields
            checkForEmptyFields(data);

            // Scroll to output
            document.getElementById('output').scrollIntoView({ behavior: 'smooth' });
        }

        function clearData() {
            document.getElementById('excelData').value = '';
            document.getElementById('output').classList.remove('show');
            document.getElementById('alert').classList.remove('show');
            document.getElementById('documentContent').innerHTML = '';
            
            // Scroll back to top
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        function checkForEmptyFields(data) {
            const criticalFields = [
                "Child's first and last name",
                "Child's date of birth",
                "Child's health card number",
                '1st parent/guardian full name',
                '1st parent/guardian phone number',
                '1st parent/guardian email address',
                'Home address'
            ];

            const hasEmptyFields = criticalFields.some(field => !data[field] || data[field].trim() === '');
            
            if (hasEmptyFields) {
                document.getElementById('alert').classList.add('show');
            } else {
                document.getElementById('alert').classList.remove('show');
            }
        }

        function formatDate(dateValue) {
            if (!dateValue) return 'Not provided';
            
            try {
                // Remove any timezone info for cleaner parsing
                const cleanDate = dateValue.replace(/GMT[+-]\d{4}.*$/, '').trim();
                const date = new Date(cleanDate);
                
                if (!isNaN(date.getTime())) {
                    return date.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    });
                }
            } catch (e) {
                // If parsing fails, return the original value
            }
            return dateValue;
        }

        function generateDocument(data) {
            const referralDate = formatDate(data["Start time"]);
            const completionDate = formatDate(data["Completion time"]);
            const childDOB = formatDate(data["Child's date of birth"]);
            
            // Check if this is a third-party referral
            const isThirdPartyReferral = data["Are you the parent/guardian of the child?"] === 'No';

            let html = `
                <div class="document-header">
                    <h1>QuickStart Nova Scotia - Referral Information</h1>
                    <div class="date">Referral Received: ${referralDate}</div>
                    ${data["Id"] ? `<div class="date">Referral ID: ${data["Id"]}</div>` : ''}
                </div>

                <div class="section">
                    <div class="section-title">Child Information</div>
                    <div class="info-grid">
                        <div class="info-item">
                            <div class="info-label">Child's Name</div>
                            <div class="info-value ${!data["Child's first and last name"] ? 'empty' : ''}">${data["Child's first and last name"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Date of Birth</div>
                            <div class="info-value ${!data["Child's date of birth"] ? 'empty' : ''}">${childDOB}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Health Card Number</div>
                            <div class="info-value ${!data["Child's health card number"] ? 'empty' : ''}">${data["Child's health card number"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Pronouns</div>
                            <div class="info-value ${!data["Child pronouns"] ? 'empty' : ''}">${data["Child pronouns"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Age at Referral</div>
                            <div class="info-value ${!data["Age of child at referral"] ? 'empty' : ''}">${data["Age of child at referral"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Autism Diagnosis Status</div>
                            <div class="info-value ${!data["What type of Autism diagnosis does the/your child have?"] ? 'empty' : ''}">${data["What type of Autism diagnosis does the/your child have?"] || 'Not provided'}</div>
                        </div>
                    </div>
                </div>

                <div class="section">
                    <div class="section-title">Primary Parent/Guardian Information</div>
                    <div class="info-grid">
                        <div class="info-item">
                            <div class="info-label">Full Name</div>
                            <div class="info-value ${!data["1st parent/guardian full name"] ? 'empty' : ''}">${data["1st parent/guardian full name"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Phone Number</div>
                            <div class="info-value ${!data["1st parent/guardian phone number"] ? 'empty' : ''}">${data["1st parent/guardian phone number"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Email Address</div>
                            <div class="info-value ${!data["1st parent/guardian email address"] ? 'empty' : ''}">${data["1st parent/guardian email address"] || 'Not provided'}</div>
                        </div>
                    </div>
                </div>
            `;

            // Add secondary parent/guardian section only if any info is provided
            if (data["2nd parent/guardian full name (Optional)"] || 
                data["2nd parent/guardian phone number"] || 
                data["2nd parent/guardian email"]) {
                html += `
                <div class="section">
                    <div class="section-title">Secondary Parent/Guardian Information (Optional)</div>
                    <div class="info-grid">
                        <div class="info-item">
                            <div class="info-label">Full Name</div>
                            <div class="info-value ${!data["2nd parent/guardian full name (Optional)"] ? 'empty' : ''}">${data["2nd parent/guardian full name (Optional)"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Phone Number</div>
                            <div class="info-value ${!data["2nd parent/guardian phone number"] ? 'empty' : ''}">${data["2nd parent/guardian phone number"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Email Address</div>
                            <div class="info-value ${!data["2nd parent/guardian email"] ? 'empty' : ''}">${data["2nd parent/guardian email"] || 'Not provided'}</div>
                        </div>
                    </div>
                </div>`;
            }

            html += `
                <div class="section">
                    <div class="section-title">Contact Information</div>
                    <div class="info-grid">
                        <div class="info-item full-width">
                            <div class="info-label">Home Address</div>
                            <div class="info-value ${!data["Home address"] ? 'empty' : ''}">${data["Home address"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Nova Scotia Zone</div>
                            <div class="info-value ${!data["Zone location"] ? 'empty' : ''}">${data["Zone location"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Preferred Contact Method</div>
                            <div class="info-value ${!data["Best method of contact"] ? 'empty' : ''}">${data["Best method of contact"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Best Time for Phone Contact</div>
                            <div class="info-value ${!data["Best time of day to contact you by phone"] ? 'empty' : ''}">${data["Best time of day to contact you by phone"] || 'Not provided'}</div>
                        </div>
                    </div>
                </div>

                <div class="section">
                    <div class="section-title">Language Information</div>
                    <div class="info-grid">
                        <div class="info-item">
                            <div class="info-label">Fluent in English</div>
                            <div class="info-value ${!data["Are you fluent in English?"] ? 'empty' : ''}">${data["Are you fluent in English?"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Other Languages Spoken at Home</div>
                            <div class="info-value ${!data["Language(s) spoken at home other than English"] ? 'empty' : ''}">${data["Language(s) spoken at home other than English"] || 'None specified'}</div>
                        </div>
                    </div>
                </div>
            `;

            // Add third-party referral section if applicable
            if (isThirdPartyReferral) {
                html += `
                <div class="section">
                    <div class="section-title">Referral Source Information</div>
                    <div class="info-grid">
                        <div class="info-item">
                            <div class="info-label">Referral Submitted By</div>
                            <div class="info-value">Third Party</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Name of Person Completing Form</div>
                            <div class="info-value ${!data["Name of person completing the form"] ? 'empty' : ''}">${data["Name of person completing the form"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Email of Person Completing Form</div>
                            <div class="info-value ${!data["Email of the person completing the form"] ? 'empty' : ''}">${data["Email of the person completing the form"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Relationship to Child/Family</div>
                            <div class="info-value ${!data["Relationship to child"] ? 'empty' : ''}">${data["Relationship to child"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item full-width">
                            <div class="info-label">Family Consent Confirmed</div>
                            <div class="info-value ${!data["Referral on behalf confirmation"] ? 'empty' : ''}">${data["Referral on behalf confirmation"] || 'Not provided'}</div>
                        </div>
                    </div>
                </div>`;
            }

            html += `
                <div class="section">
                    <div class="section-title">Program Eligibility</div>
                    <div class="info-grid">
                        <div class="info-item full-width">
                            <div class="info-label">Consent for IWK Clinical Intake and Care Coordination (CICC) Team</div>
                            <div class="info-value ${!data["Consent for CICC sharing"] ? 'empty' : ''}">${data["Consent for CICC sharing"] || 'Not provided'}</div>
                        </div>
                    </div>
                </div>
            `;

            // Add additional information section if provided
            if (data["Is there any additional information you want to share"] && 
                data["Is there any additional information you want to share"].trim() !== '') {
                html += `
                <div class="section">
                    <div class="section-title">Additional Information</div>
                    <div class="info-item full-width">
                        <div class="info-value">${data["Is there any additional information you want to share"]}</div>
                    </div>
                </div>`;
            }

            html += `
                <div class="section">
                    <div class="section-title">Administrative Information</div>
                    <div class="info-grid">
                        <div class="info-item">
                            <div class="info-label">Form ID</div>
                            <div class="info-value">${data["Id"] || 'Not provided'}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Form Started</div>
                            <div class="info-value">${referralDate}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Form Completed</div>
                            <div class="info-value">${completionDate}</div>
                        </div>
                    </div>
                </div>
            `;

            document.getElementById('documentContent').innerHTML = html;
        }

        // Add keyboard shortcut for converting (Ctrl/Cmd + Enter)
        document.getElementById('excelData').addEventListener('keydown', function(e) {
            if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
                convertData();
            }
        });

        // Prevent form submission on Enter key
        document.addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && e.target.tagName !== 'TEXTAREA') {
                e.preventDefault();
            }
        });
    </script>
</body>
</html>
